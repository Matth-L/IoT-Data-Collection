networks: 
    tig-network:
        driver: bridge

volumes:
    influxdb-data:
    grafana-data:
    shared-config:  # New shared volume for configuration

services:
    influxdb:
        container_name: influxdb
        image: influxdb:latest
        environment:
            - MQTT_PASSWORD=${MQTT_PASSWORD}
        ports:
            - 8086:8086
        networks:
            - tig-network
        volumes:
            - influxdb-data:/var/lib/influxdb
            - ./telegraf.conf:/etc/telegraf/telegraf.conf
            - ./startup_config.sh:/startup_config.sh  # Mount startup script
            - shared-config:/shared-config  # Shared volume for tokens
        healthcheck:
            test: ["CMD", "bash", "-c", "[ -f /shared-config/config_ready ]"]
            interval: 5s
            timeout: 5s
            retries: 12
            start_period: 10s
        entrypoint: ["/bin/bash", "-c", "chmod +x /startup_config.sh && /startup_config.sh"]
        restart: always

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports: 
            - 3000:3000
        environment:
            GF_SECURITY_ADMIN_USER: grafadmin
            GF_SECURITY_ADMIN_PASSWORD: grafpw
        networks: 
            - tig-network
        volumes:
            - grafana-data:/var/lib/grafana
        restart: always  

    telegraf:
        container_name: telegraf
        image: telegraf:latest
        depends_on: 
            influxdb:
                condition: service_healthy
        environment:
            HOST_NAME: "telegraf"
            INFLUXDB_HOST: "influxdb"
            INFLUXDB_PORT: "8086"
            DATABASE: "iot"
            MQTT_PASSWORD: ${MQTT_PASSWORD}
        volumes:
            - ./telegraf.conf:/etc/telegraf/telegraf.conf
            - shared-config:/shared-config  # Mount the shared volume
        entrypoint: ["/bin/bash", "-c", "source /shared-config/influx_env.sh && telegraf"]
        tty: true
        networks: 
            - tig-network
        privileged: true
        restart: always

    mailslurper:
        container_name: mailslurper
        image: marcopas/docker-mailslurper:latest
        ports:
            - 2500:2500
            - 8080:8080
            - 8085:8085
        networks:
            - tig-network
        restart: always