apiVersion: 1
groups:
    - orgId: 1
      name: 1m-interval
      folder: mail-alert
      interval: 1m
      rules:
        - uid: beiztxopqwr9cf
          title: sensor-mail
          condition: C
          data:
            - refId: A
              relativeTimeRange:
                from: 600
                to: 0
              datasourceUid: deizt2ctjkbuoa
              model:
                intervalMs: 1000
                maxDataPoints: 43200
                query: |-
                    from(bucket: "iot")
                      |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                      |> filter(fn: (r) => r["_measurement"] == "mqtt_consumer")
                      |> filter(fn: (r) => r["_field"] == "decoded_payload_sensor")
                      |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)
                      |> yield(name: "mean")
                refId: A
            - refId: B
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params: []
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - B
                      reducer:
                        params: []
                        type: max
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                reducer: max
                refId: B
                type: reduce
            - refId: C
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 1
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: B
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
          noDataState: NoData
          execErrState: Error
          for: 1m
          annotations:
            description: Le capteur de présence a détecté un individu dans le datacenter
            summary: Alerte intrusion
          isPaused: false
        - uid: aeizu0c6k7e9sa
          title: humidity-mail
          condition: C
          data:
            - refId: A
              relativeTimeRange:
                from: 600
                to: 0
              datasourceUid: deizt2ctjkbuoa
              model:
                intervalMs: 1000
                maxDataPoints: 43200
                query: |-
                    from(bucket: "iot")
                      |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                      |> filter(fn: (r) => r["_measurement"] == "mqtt_consumer")
                      |> filter(fn: (r) => r["_field"] == "decoded_payload_humidity")
                      |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)
                      |> yield(name: "mean")
                refId: A
            - refId: B
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params: []
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - B
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                reducer: mean
                refId: B
                type: reduce
            - refId: C
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 50
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: B
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
          noDataState: NoData
          execErrState: Error
          for: 1m
          annotations:
            description: 'Seuil critique : L''humidité moyenne a dépassé le seuil défini.'
            summary: 'Alerte urgente : Humidité élevée dans le datacenter'
          isPaused: false
        - uid: deizu3mg44zcwb
          title: temperature-mail
          condition: C
          data:
            - refId: A
              relativeTimeRange:
                from: 600
                to: 0
              datasourceUid: deizt2ctjkbuoa
              model:
                intervalMs: 1000
                maxDataPoints: 43200
                query: |-
                    from(bucket: "iot")
                      |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                      |> filter(fn: (r) => r["_measurement"] == "mqtt_consumer")
                      |> filter(fn: (r) => r["_field"] == "decoded_payload_temperature")
                      |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)
                      |> yield(name: "mean")
                refId: A
            - refId: B
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params: []
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - B
                      reducer:
                        params: []
                        type: max
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                reducer: max
                refId: B
                type: reduce
            - refId: C
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 20
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: B
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
          dashboardUid: aeht4gzzmdon4e
          panelId: 5
          noDataState: NoData
          execErrState: Error
          for: 1m
          annotations:
            __dashboardUid__: aeht4gzzmdon4e
            __panelId__: "5"
            description: 'Seuil critique : La température moyenne a dépassé le seuil défini.'
            summary: 'Alerte urgente : Température élevée dans le datacenter'
          isPaused: false
